#include <GL/freeglut.h>
#include <stdio.h>
#include "main.h"
#include "color.h"
#include "NcFileInterpreter.h"


bool  mouseLeftDown;
bool  mouseRightDown;
float mouseX, mouseY;
float cameraAngleX;
float cameraAngleY;
float cameraDistance;
int   Row = 0;
const  int	   BUFSIZE   = 512;

//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
void motion(int x, int y){  //鼠标按下并正在移动回调函数
    if (x < screenWidth - 118){
        if(mouseLeftDown){
            cameraAngleY += (x - mouseX);
            cameraAngleX += (y - mouseY);
            mouseX = x;
            mouseY = y;
        }
        if(mouseRightDown){
            cameraDistance -= (y - mouseY) * 0.001f;
            mouseY = y;
        }
    }
}
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
extern float CursoX, CursoY, CursoZ; 
void passivemotion(int x, int y){  //当前窗口的鼠标正在移动回调函数  
    GLfloat  winX, winY, winZ;
    GLdouble posX, posY, posZ;
    //----------------------------------------------
    winX = (float)x;
    winY = viewport[3] - (float)y;
    winZ = 0;
    /*参数 1,2 : 指定从帧缓存中读取的第一个像素的窗口坐标,矩形像素块左下角坐标 
     *参数 3,4 : 指定像素矩形的大小,对应单日个像素的宽度,高度 
     *参数 5   : 指定像素数据的格式 
     *参数 6   : 指定像素数据的类型 
     *参数 7   : 返回像素数据 */    
    glReadPixels((int)winX,(int)winY,1,1,GL_DEPTH_COMPONENT,GL_FLOAT,&winZ);//从帧缓存中读取一块像素 
    /*参数 1,2,3 :前 3 个参数是被映射的窗口坐标系,
     *参数 4,5,6 :中间 3 个是模型视景矩阵,投影矩阵,当前视口,
     *参数 7,8,9 :后面 3 个被计算的物体坐标*/ 
    gluUnProject(winX,winY,winZ, modelview,portection,viewport, &posX,&posY,&posZ);//将窗口坐标映射为物体坐标 
    /*参数 1,2,3 :前 3 个参数是物体坐标系,
     *参数 4,5,6 :中间 3 个是模型视景矩阵,投影矩阵,当前视口,
     *参数 7,8,9 :后面 3 个计算的窗口坐标*/
    gluProject  (posX,posY,posZ, modelview,portection,viewport, &Win2D.X,&Win2D.Y,&Win2D.Z);//将物体坐标映射为窗口坐标 
    if (winZ != 1.00000){ 
        OpenGL3D.X = posX;
        OpenGL3D.Y = posY;
        OpenGL3D.Z = posZ;
        CursoX=posX; CursoY=posY; CursoZ=posZ; 
    } 

}
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
/*
  button:0 = 左键, 1 = 中键, 2 = 右键
  state: 0 = 按下, 1 = 弹起 
 */
void mouse(int button, int state, int x, int y){  //当前窗口的鼠标按键回调函数
    mouseX = x;
    mouseY = y;
    //===========================================================================================    
    //===========================================================================================
    if(button == GLUT_LEFT_BUTTON){
        if(state == GLUT_DOWN){
            mouseLeftDown = true;
        }
        else if(state == GLUT_UP)
            mouseLeftDown = false;
    }

    else if(button == GLUT_RIGHT_BUTTON){
        if(state == GLUT_DOWN){
            mouseRightDown = true;            
        }
        else if(state == GLUT_UP)
            mouseRightDown = false;
    }    
}
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
#define  GLUT_WHEEL_UP    -1
#define  GLUT_WHEEL_DOWN   1
void mouseWheel(int button, int dir, int x, int y){
     if(x < 30){
         if (G_NC_Code == true){
             if (dir == GLUT_WHEEL_UP){
                if ((g_v - Row) > (screenHeight / 15))     
                  Row += 1;
             }  
             if (dir == GLUT_WHEEL_DOWN){
                if (Row != 0)   
                  Row -= 1;
             }
         }
     }
     if ((x > 30) && (x < screenWidth)){
         if (dir == GLUT_WHEEL_UP){
            OrthoWin += 8;
         }  
         if (dir == GLUT_WHEEL_DOWN){
            if (OrthoWin > 8)
               OrthoWin -= 8;
         }
         OrthoWinBool = true;
     }
}
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================
//==========================================================================================================================


